version: '3.8'

services:
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./
      target: prod
    ports:
      - "8000:80"
    environment:
      - KYUTAI_STT_URL=ws://stt:8080
      - KYUTAI_TTS_URL=ws://tts:8081
      - KYUTAI_LLM_URL=https://api.mistral.ai/v1
      - KYUTAI_LLM_API_KEY={{ mistral_api_key }}
      - HUGGING_FACE_HUB_TOKEN={{ hugging_face_token }}
    depends_on:
      - stt
      - tts
    restart: unless-stopped

  stt:
    build:
      context: services/moshi-server
      dockerfile: public.Dockerfile
    command: ["worker", "--config", "configs/stt.toml"]
    ports:
      - "8080:8080"
    environment:
      - HUGGING_FACE_HUB_TOKEN={{ hugging_face_token }}
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - stt_data:/app/data
      - /tmp/models:/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped

  tts:
    build:
      context: services/moshi-server
      dockerfile: public.Dockerfile
    command: ["worker", "--config", "configs/tts.toml"]
    ports:
      - "8081:8080"
    environment:
      - HUGGING_FACE_HUB_TOKEN={{ hugging_face_token }}
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - tts_data:/app/data
      - /tmp/models:/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped

volumes:
  stt_data:
  tts_data:
